import * as ss from 'npm:simple-statistics@^7.0.0'
import * as pl from '../lib/index.ts'
import * as mt from 'npm:mathjs@^13.0.0'

const x = () => new Array(1000).fill(0).map(() => Math.random() * 100)
const y = () => new Array(1000).fill(0).map(() => Math.random() * 100)

// Deno.bench('Base Bench - sum - @psych/lib', { group: 'sum', baseline: true }, () => { pl.sum(x()) })
// Deno.bench('Base Bench - sum - simple-statistics', { group: 'sum' }, () => { ss.sum(x()) })
// Deno.bench('Base Bench - sum - mathjs', { group: 'sum' }, () => { mt.sum(x()) })
// Deno.bench('Base Bench - mean - @psych/lib', { group: 'mean', baseline: true }, () => { pl.mean(x()) })
// Deno.bench('Base Bench - mean - simple-statistics', { group: 'mean' }, () => { ss.mean(x()) })
// Deno.bench('Base Bench - mean - mathjs', { group: 'mean' }, () => { mt.mean(x()) })
// Deno.bench('Base Bench - max - @psych/lib', { group: 'max', baseline: true }, () => { pl.max(x()) })
// Deno.bench('Base Bench - max - simple-statistics', { group: 'max' }, () => { ss.max(x()) })
// Deno.bench('Base Bench - max - mathjs', { group: 'max' }, () => { mt.max(x()) })
// Deno.bench('Base Bench - min - @psych/lib', { group: 'min', baseline: true }, () => { pl.min(x()) })
// Deno.bench('Base Bench - min - simple-statistics', { group: 'min' }, () => { ss.min(x()) })
// Deno.bench('Base Bench - min - mathjs', { group: 'min' }, () => { mt.min(x()) })
// Deno.bench('Base Bench - median - @psych/lib', { group: 'median', baseline: true }, () => { pl.median(x()) })
// Deno.bench('Base Bench - median - simple-statistics', { group: 'median' }, () => { ss.median(x()) })
// Deno.bench('Base Bench - median - mathjs', { group: 'median' }, () => { mt.median(x()) })
// Deno.bench('Base Bench - quantile - @psych/lib', { group: 'quantile', baseline: true }, () => { pl.quantile(x(), 0.25); pl.quantile(x(), 0.75) })
// Deno.bench('Base Bench - quantile - simple-statistics', { group: 'quantile' }, () => { ss.quantile(x(), 0.25); ss.quantile(x(), 0.75) })
// Deno.bench('Base Bench - quantile - mathjs', { group: 'quantile' }, () => { mt.quantileSeq(x(), 0.25); mt.quantileSeq(x(), 0.75) })
// Deno.bench('Base Bench - vari - @psych/lib', { group: 'variance', baseline: true }, () => { pl.vari(x()) })
// Deno.bench('Base Bench - vari - simple-statistics', { group: 'variance' }, () => { ss.sampleVariance(x()) })
// Deno.bench('Base Bench - vari - mathjs', { group: 'variance' }, () => { mt.variance(x()) })
// Deno.bench('Base Bench - std - @psych/lib', { group: 'std', baseline: true }, () => { pl.std(x()) })
// Deno.bench('Base Bench - std - simple-statistics', { group: 'std' }, () => { ss.sampleStandardDeviation(x()) })
// Deno.bench('Base Bench - std - mathjs', { group: 'std' }, () => { mt.std(x()) })
// Deno.bench('Base Bench - corr - @psych/lib', { group: 'correlation', baseline: true }, () => { pl.corr(x(), y()) })
// Deno.bench('Base Bench - corr - simple-statistics', { group: 'correlation' }, () => { ss.sampleCorrelation(x(), y()) })
// Deno.bench('Base Bench - corr - mathjs', { group: 'correlation' }, () => { mt.corr(x(), y()) })
// Deno.bench('Base Bench - cov - @psych/lib', { group: 'covariance', baseline: true }, () => { pl.cov(x(), y()) })
// Deno.bench('Base Bench - cov - simple-statistics', { group: 'covariance' }, () => { ss.sampleCovariance(x(), y()) })
// Deno.bench('Base Bench - kurtosis - @psych/lib', { group: 'kurtosis', baseline: true }, () => { pl.kurtosis(x()) })
// Deno.bench('Base Bench - kurtosis - simple-statistics', { group: 'kurtosis' }, () => { ss.sampleKurtosis(x()) })
// Deno.bench('Base Bench - skewness - @psych/lib', { group: 'skewness', baseline: true }, () => { pl.skewness(x()) })
// Deno.bench('Base Bench - skewness - simple-statistics', { group: 'skewness' }, () => { ss.sampleSkewness(x()) })
// Deno.bench('Base Bench - sort - @psych/lib', { group: 'sort', baseline: true }, () => { pl.sort(x()); pl.sort(x(), false) })
// Deno.bench('Base Bench - sort - native', { group: 'sort' }, () => { x().sort((a, b) => a - b); x().sort((a, b) => b - a) })
// Deno.bench('Base Bench - sort - mathjs', { group: 'sort' }, () => { mt.sort(x(), 'asc'); mt.sort(x(), 'desc') })
// Deno.bench('Base Bench - ss - @psych/lib', { group: 'ss', baseline: true }, () => { pl.ss(x()) })
// Deno.bench('Base Bench - ss - native', { group: 'ss' }, () => { const _x = x(); const _m = pl.mean(_x); _x.reduce((a, b) => a + (b - _m) ** 2, 0) })
// Deno.bench('Base Bench - ssDiff - @psych/lib', { group: 'ssDiff', baseline: true }, () => { pl.ssDiff(x(), y()) })
// Deno.bench('Base Bench - ssDiff - native', { group: 'ssDiff' }, () => { const _x = x(); const _y = y(); _x.reduce((a, b, i) => a + (b - _y[i]) ** 2, 0) })
// Deno.bench('Base Bench - sp - @psych/lib', { group: 'sp', baseline: true }, () => { pl.sp(x(), y()) })
// Deno.bench('Base Bench - sp - native', { group: 'sp' }, () => { const _x = x(); const _y = y(); const _mx = pl.mean(_x); const _my = pl.mean(_y); _x.reduce((a, b, i) => a + (b - _mx) * (_y[i] - _my), 0) })
// Deno.bench('Base Bench - sem - @psych/lib', { group: 'sem', baseline: true }, () => { pl.sem(x()) })
// Deno.bench('Base Bench - sem - simple-statistics', { group: 'sem' }, () => { const _x = x(); ss.sampleStandardDeviation(_x) / Math.sqrt(_x.length) })

// Deno.bench('Base Bench - sum - @psych/lib', () => { pl.sum(x()) })
// Deno.bench('Base Bench - sum - simple-statistics', () => { ss.sum(x()) })
// Deno.bench('Base Bench - sum - mathjs', () => { mt.sum(x()) })
// Deno.bench('Base Bench - mean - @psych/lib', () => { pl.mean(x()) })
// Deno.bench('Base Bench - mean - simple-statistics', () => { ss.mean(x()) })
// Deno.bench('Base Bench - mean - mathjs', () => { mt.mean(x()) })
// Deno.bench('Base Bench - max - @psych/lib', () => { pl.max(x()) })
// Deno.bench('Base Bench - max - simple-statistics', () => { ss.max(x()) })
// Deno.bench('Base Bench - max - mathjs', () => { mt.max(x()) })
// Deno.bench('Base Bench - min - @psych/lib', () => { pl.min(x()) })
// Deno.bench('Base Bench - min - simple-statistics', () => { ss.min(x()) })
// Deno.bench('Base Bench - min - mathjs', () => { mt.min(x()) })
// Deno.bench('Base Bench - median - @psych/lib', () => { pl.median(x()) })
// Deno.bench('Base Bench - median - simple-statistics', () => { ss.median(x()) })
// Deno.bench('Base Bench - median - mathjs', () => { mt.median(x()) })
// Deno.bench('Base Bench - quantile - @psych/lib', () => { pl.quantile(x(), 0.25); pl.quantile(x(), 0.75) })
// Deno.bench('Base Bench - quantile - simple-statistics', () => { ss.quantile(x(), 0.25); ss.quantile(x(), 0.75) })
// Deno.bench('Base Bench - quantile - mathjs', () => { mt.quantileSeq(x(), 0.25); mt.quantileSeq(x(), 0.75) })
// Deno.bench('Base Bench - vari - @psych/lib', () => { pl.vari(x()) })
// Deno.bench('Base Bench - vari - simple-statistics', () => { ss.sampleVariance(x()) })
// Deno.bench('Base Bench - vari - mathjs', () => { mt.variance(x()) })
// Deno.bench('Base Bench - std - @psych/lib', () => { pl.std(x()) })
// Deno.bench('Base Bench - std - simple-statistics', () => { ss.sampleStandardDeviation(x()) })
// Deno.bench('Base Bench - std - mathjs', () => { mt.std(x()) })
// Deno.bench('Base Bench - corr - @psych/lib', () => { pl.corr(x(), y()) })
// Deno.bench('Base Bench - corr - simple-statistics', () => { ss.sampleCorrelation(x(), y()) })
// Deno.bench('Base Bench - corr - mathjs', () => { mt.corr(x(), y()) })
// Deno.bench('Base Bench - cov - @psych/lib', () => { pl.cov(x(), y()) })
// Deno.bench('Base Bench - cov - simple-statistics', () => { ss.sampleCovariance(x(), y()) })
// Deno.bench('Base Bench - kurtosis - @psych/lib', () => { pl.kurtosis(x()) })
// Deno.bench('Base Bench - kurtosis - simple-statistics', () => { ss.sampleKurtosis(x()) })
// Deno.bench('Base Bench - skewness - @psych/lib', () => { pl.skewness(x()) })
// Deno.bench('Base Bench - skewness - simple-statistics', () => { ss.sampleSkewness(x()) })
// Deno.bench('Base Bench - sort - @psych/lib', () => { pl.sort(x()); pl.sort(x(), false) })
// Deno.bench('Base Bench - sort - native', () => { x().sort((a, b) => a - b); x().sort((a, b) => b - a) })
// Deno.bench('Base Bench - sort - mathjs', () => { mt.sort(x(), 'asc'); mt.sort(x(), 'desc') })
// Deno.bench('Base Bench - ss - @psych/lib', () => { pl.ss(x()) })
// Deno.bench('Base Bench - ss - native', () => { const _x = x(); const _m = pl.mean(_x); _x.reduce((a, b) => a + (b - _m) ** 2, 0) })
// Deno.bench('Base Bench - ssDiff - @psych/lib', () => { pl.ssDiff(x(), y()) })
// Deno.bench('Base Bench - ssDiff - native', () => { const _x = x(); const _y = y(); _x.reduce((a, b, i) => a + (b - _y[i]) ** 2, 0) })
// Deno.bench('Base Bench - sp - @psych/lib', () => { pl.sp(x(), y()) })
// Deno.bench('Base Bench - sp - native', () => { const _x = x(); const _y = y(); const _mx = pl.mean(_x); const _my = pl.mean(_y); _x.reduce((a, b, i) => a + (b - _mx) * (_y[i] - _my), 0) })
// Deno.bench('Base Bench - sem - @psych/lib', () => { pl.sem(x()) })
// Deno.bench('Base Bench - sem - simple-statistics', () => { const _x = x(); ss.sampleStandardDeviation(_x) / Math.sqrt(_x.length) })

Deno.bench('@psych/lib', { group: 'Base Functions Bench' }, () => {
  pl.sum(x())
  pl.mean(x())
  pl.max(x())
  pl.min(x())
  pl.median(x())
  pl.quantile(x(), 0.25)
  pl.quantile(x(), 0.75)
  pl.vari(x())
  pl.std(x())
  pl.corr(x(), y())
  pl.cov(x(), y())
  pl.kurtosis(x())
  pl.skewness(x())
  pl.sort(x())
  pl.sort(x(), false)
  pl.ss(x())
  pl.ssDiff(x(), y())
  pl.sp(x(), y())
  pl.sem(x())
})
Deno.bench('@psych/lib - opt', { group: 'Base Functions Bench', baseline: true }, () => {
  const _x = x()
  const _xm = pl.mean(_x)
  const _y = y()
  const _ym = pl.mean(_y)
  pl.sum(_x)
  pl.max(_x)
  pl.min(_x)
  pl.median(_x)
  pl.quantile(_x, 0.25)
  pl.quantile(_x, 0.75)
  pl.vari(_x, true, _xm)
  pl.std(_x, true, _xm)
  pl.corr(_x, _y, [_xm, _ym])
  pl.cov(_x, _y, true, [_xm, _ym])
  pl.kurtosis(_x, true, _xm)
  pl.skewness(_x, true, _xm)
  pl.sort(_x)
  pl.sort(_x, false)
  pl.ss(_x, _xm)
  pl.ssDiff(_x, _y)
  pl.sp(_x, _y, [_xm, _ym])
  pl.sem(_x, true, _xm)
})
Deno.bench('simple-statistics', { group: 'Base Functions Bench' }, () => {
  ss.sum(x())
  ss.mean(x())
  ss.max(x())
  ss.min(x())
  ss.median(x())
  ss.quantile(x(), 0.25)
  ss.quantile(x(), 0.75)
  ss.sampleVariance(x())
  ss.sampleStandardDeviation(x())
  ss.sampleCorrelation(x(), y())
  ss.sampleCovariance(x(), y())
  ss.sampleKurtosis(x())
  ss.sampleSkewness(x())
  x().sort((a, b) => a - b)
  x().sort((a, b) => b - a)
  const _x = x()
  const _xm = ss.mean(_x)
  const _y = y()
  const _ym = ss.mean(_y)
  _x.reduce((a, b) => a + (b - _xm) ** 2, 0) // ss
  _x.reduce((a, b, i) => a + (b - _y[i]) ** 2, 0) // ssDiff
  _x.reduce((a, b, i) => a + (b - _xm) * (_y[i] - _ym), 0) // sp
  const __x = x()
  ss.sampleStandardDeviation(__x) / Math.sqrt(__x.length) // sem
})
Deno.bench('mathjs', { group: 'Base Functions Bench' }, () => {
  mt.sum(x())
  mt.mean(x())
  mt.max(x())
  mt.min(x())
  mt.median(x())
  mt.quantileSeq(x(), 0.25)
  mt.quantileSeq(x(), 0.75)
  mt.variance(x())
  mt.std(x())
  mt.corr(x(), y())
  const _x = x()
  const _y = y()
  const _mx = mt.mean(_x)
  const _my = mt.mean(_y)
  _x.reduce((a, b, i) => a + (b - _mx) * (_y[i] - _my), 0) / (_x.length - 1) // cov
  const pl_x = x()
  pl.kurtosis(pl_x, true, mt.mean(pl_x)) // kurtosis (partly using @psych/lib)
  pl.skewness(pl_x, true, mt.mean(pl_x)) // skewness (partly using @psych/lib)
  mt.sort(x(), 'asc')
  mt.sort(x(), 'desc')
  const __x = x()
  const __xm = mt.mean(__x)
  const __y = y()
  const __ym = mt.mean(__y)
  __x.reduce((a, b) => a + (b - __xm) ** 2, 0) // ss
  __x.reduce((a, b, i) => a + (b - __y[i]) ** 2, 0) // ssDiff
  __x.reduce((a, b, i) => a + (b - __xm) * (__y[i] - __ym), 0) // sp
  const ___x = x()
  Number(mt.std(___x)) / Math.sqrt(___x.length) // sem
})
