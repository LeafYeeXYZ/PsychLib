import * as ss from 'npm:simple-statistics@^7.0.0'
import * as pl from '../lib/index.ts'
import * as mt from 'npm:mathjs@^13.0.0'

const x = () => new Array(1000).fill(0).map(() => Math.random() * 100)
const y = () => new Array(1000).fill(0).map(() => Math.random() * 100)

Deno.bench('Base Bench - sum - @psych/lib', () => { pl.sum(x()) })
Deno.bench('Base Bench - sum - simple-statistics', () => { ss.sum(x()) })
Deno.bench('Base Bench - sum - mathjs', () => { mt.sum(x()) })
Deno.bench('Base Bench - mean - @psych/lib', () => { pl.mean(x()) })
Deno.bench('Base Bench - mean - simple-statistics', () => { ss.mean(x()) })
Deno.bench('Base Bench - mean - mathjs', () => { mt.mean(x()) })
Deno.bench('Base Bench - max - @psych/lib', () => { pl.max(x()) })
Deno.bench('Base Bench - max - simple-statistics', () => { ss.max(x()) })
Deno.bench('Base Bench - max - mathjs', () => { mt.max(x()) })
Deno.bench('Base Bench - min - @psych/lib', () => { pl.min(x()) })
Deno.bench('Base Bench - min - simple-statistics', () => { ss.min(x()) })
Deno.bench('Base Bench - min - mathjs', () => { mt.min(x()) })
Deno.bench('Base Bench - median - @psych/lib', () => { pl.median(x()) })
Deno.bench('Base Bench - median - simple-statistics', () => { ss.median(x()) })
Deno.bench('Base Bench - median - mathjs', () => { mt.median(x()) })
Deno.bench('Base Bench - quantile - @psych/lib', () => { pl.quantile(x(), 0.25); pl.quantile(x(), 0.75) })
Deno.bench('Base Bench - quantile - simple-statistics', () => { ss.quantile(x(), 0.25); ss.quantile(x(), 0.75) })
Deno.bench('Base Bench - quantile - mathjs', () => { mt.quantileSeq(x(), 0.25); mt.quantileSeq(x(), 0.75) })
Deno.bench('Base Bench - vari - @psych/lib', () => { pl.vari(x()) })
Deno.bench('Base Bench - vari - simple-statistics', () => { ss.sampleVariance(x()) })
Deno.bench('Base Bench - vari - mathjs', () => { mt.variance(x()) })
Deno.bench('Base Bench - std - @psych/lib', () => { pl.std(x()) })
Deno.bench('Base Bench - std - simple-statistics', () => { ss.sampleStandardDeviation(x()) })
Deno.bench('Base Bench - std - mathjs', () => { mt.std(x()) })
Deno.bench('Base Bench - corr - @psych/lib', () => { pl.corr(x(), y()) })
Deno.bench('Base Bench - corr - simple-statistics', () => { ss.sampleCorrelation(x(), y()) })
Deno.bench('Base Bench - corr - mathjs', () => { mt.corr(x(), y()) })
Deno.bench('Base Bench - cov - @psych/lib', () => { pl.cov(x(), y()) })
Deno.bench('Base Bench - cov - simple-statistics', () => { ss.sampleCovariance(x(), y()) })
Deno.bench('Base Bench - kurtosis - @psych/lib', () => { pl.kurtosis(x()) })
Deno.bench('Base Bench - kurtosis - simple-statistics', () => { ss.sampleKurtosis(x()) })
Deno.bench('Base Bench - skewness - @psych/lib', () => { pl.skewness(x()) })
Deno.bench('Base Bench - skewness - simple-statistics', () => { ss.sampleSkewness(x()) })
Deno.bench('Base Bench - sort - @psych/lib', () => { pl.sort(x()); pl.sort(x(), false) })
Deno.bench('Base Bench - sort - native', () => { x().sort((a, b) => a - b); x().sort((a, b) => b - a) })
Deno.bench('Base Bench - sort - mathjs', () => { mt.sort(x(), 'asc'); mt.sort(x(), 'desc') })
Deno.bench('Base Bench - ss - @psych/lib', () => { pl.ss(x()) })
Deno.bench('Base Bench - ss - native', () => { const _x = x(); const _m = pl.mean(_x); _x.reduce((a, b) => a + (b - _m) ** 2, 0) })
Deno.bench('Base Bench - ssDiff - @psych/lib', () => { pl.ssDiff(x(), y()) })
Deno.bench('Base Bench - ssDiff - native', () => { const _x = x(); const _y = y(); _x.reduce((a, b, i) => a + (b - _y[i]) ** 2, 0) })
Deno.bench('Base Bench - sp - @psych/lib', () => { pl.sp(x(), y()) })
Deno.bench('Base Bench - sp - native', () => { const _x = x(); const _y = y(); const _mx = pl.mean(_x); const _my = pl.mean(_y); _x.reduce((a, b, i) => a + (b - _mx) * (_y[i] - _my), 0) })
Deno.bench('Base Bench - sem - @psych/lib', () => { pl.sem(x()) })
Deno.bench('Base Bench - sem - simple-statistics', () => { const _x = x(); ss.sampleStandardDeviation(_x) / Math.sqrt(_x.length) })
